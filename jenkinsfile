pipeline {
    agent any
    
    environment {
        DOCKER_REGISTRY = "your-docker-registry-url" // Replace with your Docker registry URL
        DOCKER_IMAGE_NAME = "my-web-app"
        DOCKER_IMAGE_TAG = "${env.BUILD_NUMBER}"
        GITHUB_REPO = "https://github.com/your-username/your-repo.git" // Replace with your GitHub repository URL
        AKS_CLUSTER_NAME = "your-aks-cluster-name" // Replace with your AKS cluster name
        KUBERNETES_CONFIG = credentials('your-kubeconfig-credentials-id') // Jenkins credentials for Kubernetes config
    }
    
    stages {
        stage('Build') {
            steps {
                script {
                    checkout([$class: 'GitSCM', branches: [[name: '*/master']], userRemoteConfigs: [[url: "${GITHUB_REPO}"]]])
                    sh "docker build -t ${DOCKER_REGISTRY}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} ."
                }
            }
        }
        
        stage('Push to Registry') {
            steps {
                script {
                    sh "docker login -u your-docker-registry-username -p your-docker-registry-password ${DOCKER_REGISTRY}"
                    sh "docker push ${DOCKER_REGISTRY}/${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}"
                }
            }
        }
        
        stage('Deploy to AKS') {
            steps {
                script {
                    // Download Kubernetes config
                    writeFile(file: 'kubeconfig', text: KUBERNETES_CONFIG)
                    
                    // Deploy to AKS using deployment.yaml from GitHub repo
                    sh "kubectl --kubeconfig=kubeconfig apply -f deployment.yaml"
                }
            }
        }
    }
}
