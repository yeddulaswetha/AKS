pipeline{
  agent any
  environment {
    BUILD_VERSION = "BID${env.BUILD_ID}__BNUM${env.BUILD_NUMBER}__GIT${env.GIT_COMMIT}"
    MINDWAVEREGISTRY = "your-acr-name.azurecr.io"
    MAIA_RESOURCE_NAMESPACE = "your-maia-namespace"
    AZURE_SPCOMMON = "your-azure-service-principal-id"
    AZURE_CONTAINER_REGISTRY_COMMON = "your-azure-container-registry-name"
    AZURE_RG_COMMON = "your-azure-resource-group"
    KUBERNETES_CONFIGCOMMON = "path/to/your/kubeconfig"
  }
  stages {
    stage('Build stage 1') {
      parallel {
        stage('Build client') {
          steps {
            acrQuickTask(azureCredentialsId: "$env.AZURE_SPCOMMON", imageNames: [
              [image: "$env.MINDWAVEREGISTRY/$env.MAIA_RESOURCE_NAMESPACE:v$env.BUILD_VERSION"],
              [image: "$env.MINDWAVEREGISTRY/$env.MAIA_RESOURCE_NAMESPACE:latest"]
            ], registryName: "$env.AZURE_CONTAINER_REGISTRY_COMMON", resourceGroupName: "$env.AZURE_RG_COMMON", timeout: 28800)
          }
        }
      }
    }

    stage('Deployment stage 1') {
      parallel {
        stage('Deploy client') {
          steps {
            kubernetesDeploy(kubeConfig: [path: "$env.KUBERNETES_CONFIGCOMMON"], configs: 'scripts/staging/client.yaml')
          }
        }
      }
    }
  }
}
